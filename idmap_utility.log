LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
index: arbitrator
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
index: arbitrator
value: OrderedDict([('profileUuid', 'Iaac53e00bd9a11de9b8c850332338889'), ('phones', OrderedDict([('phone', OrderedDict([('id', '1'), ('phoneNumber', '(605) 336-2880'), ('isInherited', 'Y')]))])), ('emails', OrderedDict([('email', OrderedDict([('id', '1'), ('address', 'lawyers@dehs.com'), ('isInherited', 'Y')]))])), ('educations', OrderedDict([('education', [OrderedDict([('type', 'LE'), ('schoolName', 'Nicholaus Copernicus'), ('graduationDate', '1952')]), OrderedDict([('type', 'LW'), ('schoolName', 'Happy LAw School'), ('graduationDate', '1991')]), OrderedDict([('type', 'LQ'), ('schoolName', 'Law School Number 1'), ('graduationDate', '1911')])])])), ('statusType', 'A')])
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
index: arbitrator
Determine the object type
value: OrderedDict([('profileUuid', 'Iaac53e00bd9a11de9b8c850332338889'), ('phones', OrderedDict([('phone', OrderedDict([('id', '1'), ('phoneNumber', '(605) 336-2880'), ('isInherited', 'Y')]))])), ('emails', OrderedDict([('email', OrderedDict([('id', '1'), ('address', 'lawyers@dehs.com'), ('isInherited', 'Y')]))])), ('educations', OrderedDict([('education', [OrderedDict([('type', 'LE'), ('schoolName', 'Nicholaus Copernicus'), ('graduationDate', '1952')]), OrderedDict([('type', 'LW'), ('schoolName', 'Happy LAw School'), ('graduationDate', '1991')]), OrderedDict([('type', 'LQ'), ('schoolName', 'Law School Number 1'), ('graduationDate', '1911')])])])), ('statusType', 'A')])
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
index: arbitrator
Determine the object type
value: OrderedDict([('profileUuid', 'Iaac53e00bd9a11de9b8c850332338889'), ('phones', OrderedDict([('phone', OrderedDict([('id', '1'), ('phoneNumber', '(605) 336-2880'), ('isInherited', 'Y')]))])), ('emails', OrderedDict([('email', OrderedDict([('id', '1'), ('address', 'lawyers@dehs.com'), ('isInherited', 'Y')]))])), ('educations', OrderedDict([('education', [OrderedDict([('type', 'LE'), ('schoolName', 'Nicholaus Copernicus'), ('graduationDate', '1952')]), OrderedDict([('type', 'LW'), ('schoolName', 'Happy LAw School'), ('graduationDate', '1991')]), OrderedDict([('type', 'LQ'), ('schoolName', 'Law School Number 1'), ('graduationDate', '1911')])])])), ('statusType', 'A')])
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
index: arbitrator
Determine the object type
value: OrderedDict([('profileUuid', 'Iaac53e00bd9a11de9b8c850332338889'), ('phones', OrderedDict([('phone', OrderedDict([('id', '1'), ('phoneNumber', '(605) 336-2880'), ('isInherited', 'Y')]))])), ('emails', OrderedDict([('email', OrderedDict([('id', '1'), ('address', 'lawyers@dehs.com'), ('isInherited', 'Y')]))])), ('educations', OrderedDict([('education', [OrderedDict([('type', 'LE'), ('schoolName', 'Nicholaus Copernicus'), ('graduationDate', '1952')]), OrderedDict([('type', 'LW'), ('schoolName', 'Happy LAw School'), ('graduationDate', '1991')]), OrderedDict([('type', 'LQ'), ('schoolName', 'Law School Number 1'), ('graduationDate', '1911')])])])), ('statusType', 'A')])
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
index: arbitrator
Determine the object type
Object type: <class 'collections.OrderedDict'>
value: OrderedDict([('profileUuid', 'Iaac53e00bd9a11de9b8c850332338889'), ('phones', OrderedDict([('phone', OrderedDict([('id', '1'), ('phoneNumber', '(605) 336-2880'), ('isInherited', 'Y')]))])), ('emails', OrderedDict([('email', OrderedDict([('id', '1'), ('address', 'lawyers@dehs.com'), ('isInherited', 'Y')]))])), ('educations', OrderedDict([('education', [OrderedDict([('type', 'LE'), ('schoolName', 'Nicholaus Copernicus'), ('graduationDate', '1952')]), OrderedDict([('type', 'LW'), ('schoolName', 'Happy LAw School'), ('graduationDate', '1991')]), OrderedDict([('type', 'LQ'), ('schoolName', 'Law School Number 1'), ('graduationDate', '1911')])])])), ('statusType', 'A')])
Done
The end if near!
LPA Migration Test
The application is stopping
Have a nice day
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
index: arbitrator
Determine the object type
Object type: <class 'collections.OrderedDict'>
Data value: OrderedDict([('profileUuid', 'Iaac53e00bd9a11de9b8c850332338889'), ('phones', OrderedDict([('phone', OrderedDict([('id', '1'), ('phoneNumber', '(605) 336-2880'), ('isInherited', 'Y')]))])), ('emails', OrderedDict([('email', OrderedDict([('id', '1'), ('address', 'lawyers@dehs.com'), ('isInherited', 'Y')]))])), ('educations', OrderedDict([('education', [OrderedDict([('type', 'LE'), ('schoolName', 'Nicholaus Copernicus'), ('graduationDate', '1952')]), OrderedDict([('type', 'LW'), ('schoolName', 'Happy LAw School'), ('graduationDate', '1991')]), OrderedDict([('type', 'LQ'), ('schoolName', 'Law School Number 1'), ('graduationDate', '1911')])])])), ('statusType', 'A')])
index: profileUuid
Determine the object type
Object type: <class 'str'>
Data value: Iaac53e00bd9a11de9b8c850332338889
index: phones
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Start parsing ... 
index: arbitrator
Determine the object type
Object type: <class 'collections.OrderedDict'>
Data value: OrderedDict([('profileUuid', 'Iaac53e00bd9a11de9b8c850332338889'), ('phones', OrderedDict([('phone', OrderedDict([('id', '1'), ('phoneNumber', '(605) 336-2880'), ('isInherited', 'Y')]))])), ('emails', OrderedDict([('email', OrderedDict([('id', '1'), ('address', 'lawyers@dehs.com'), ('isInherited', 'Y')]))])), ('educations', OrderedDict([('education', [OrderedDict([('type', 'LE'), ('schoolName', 'Nicholaus Copernicus'), ('graduationDate', '1952')]), OrderedDict([('type', 'LW'), ('schoolName', 'Happy LAw School'), ('graduationDate', '1991')]), OrderedDict([('type', 'LQ'), ('schoolName', 'Law School Number 1'), ('graduationDate', '1911')])])])), ('statusType', 'A')])
index: profileUuid
Determine the object type
Object type: <class 'str'>
Data value: Iaac53e00bd9a11de9b8c850332338889
index: phones
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Start parsing ... 
index: arbitrator
Determine the object type
Object type: <class 'collections.OrderedDict'>
Data value: OrderedDict([('profileUuid', 'Iaac53e00bd9a11de9b8c850332338889'), ('phones', OrderedDict([('phone', OrderedDict([('id', '1'), ('phoneNumber', '(605) 336-2880'), ('isInherited', 'Y')]))])), ('emails', OrderedDict([('email', OrderedDict([('id', '1'), ('address', 'lawyers@dehs.com'), ('isInherited', 'Y')]))])), ('educations', OrderedDict([('education', [OrderedDict([('type', 'LE'), ('schoolName', 'Nicholaus Copernicus'), ('graduationDate', '1952')]), OrderedDict([('type', 'LW'), ('schoolName', 'Happy LAw School'), ('graduationDate', '1991')]), OrderedDict([('type', 'LQ'), ('schoolName', 'Law School Number 1'), ('graduationDate', '1911')])])])), ('statusType', 'A')])
index: profileUuid
Determine the object type
Object type: <class 'str'>
Data value: Iaac53e00bd9a11de9b8c850332338889
index: phones
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Start parsing ... 
index: arbitrator
Determine the object type
Object type: <class 'collections.OrderedDict'>
Data value: OrderedDict([('profileUuid', 'Iaac53e00bd9a11de9b8c850332338889'), ('phones', OrderedDict([('phone', OrderedDict([('id', '1'), ('phoneNumber', '(605) 336-2880'), ('isInherited', 'Y')]))])), ('emails', OrderedDict([('email', OrderedDict([('id', '1'), ('address', 'lawyers@dehs.com'), ('isInherited', 'Y')]))])), ('educations', OrderedDict([('education', [OrderedDict([('type', 'LE'), ('schoolName', 'Nicholaus Copernicus'), ('graduationDate', '1952')]), OrderedDict([('type', 'LW'), ('schoolName', 'Happy LAw School'), ('graduationDate', '1991')]), OrderedDict([('type', 'LQ'), ('schoolName', 'Law School Number 1'), ('graduationDate', '1911')])])])), ('statusType', 'A')])
index: profileUuid
Determine the object type
Object type: <class 'str'>
Data value: Iaac53e00bd9a11de9b8c850332338889
index: phones
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Start parsing ... 
index: arbitrator
Determine the object type
Object type: <class 'collections.OrderedDict'>
Data value: OrderedDict([('profileUuid', 'Iaac53e00bd9a11de9b8c850332338889'), ('phones', OrderedDict([('phone', OrderedDict([('id', '1'), ('phoneNumber', '(605) 336-2880'), ('isInherited', 'Y')]))])), ('emails', OrderedDict([('email', OrderedDict([('id', '1'), ('address', 'lawyers@dehs.com'), ('isInherited', 'Y')]))])), ('educations', OrderedDict([('education', [OrderedDict([('type', 'LE'), ('schoolName', 'Nicholaus Copernicus'), ('graduationDate', '1952')]), OrderedDict([('type', 'LW'), ('schoolName', 'Happy LAw School'), ('graduationDate', '1991')]), OrderedDict([('type', 'LQ'), ('schoolName', 'Law School Number 1'), ('graduationDate', '1911')])])])), ('statusType', 'A')])
index: profileUuid
Determine the object type
Object type: <class 'str'>
Data value: Iaac53e00bd9a11de9b8c850332338889
index: phones
LPA Migration Test
The application is starting
Starting postgresql-connect
Set input source
Inside: ParseDictionary::ParseDictionary()
------------------------------------------------------------
Inside: ParseDictionary::run()
Loading the data file
Start parsing ... 
index: arbitrator
Determine the object type
Object type: <class 'collections.OrderedDict'>
Data value: OrderedDict([('profileUuid', 'Iaac53e00bd9a11de9b8c850332338889'), ('phones', OrderedDict([('phone', OrderedDict([('id', '1'), ('phoneNumber', '(605) 336-2880'), ('isInherited', 'Y')]))])), ('emails', OrderedDict([('email', OrderedDict([('id', '1'), ('address', 'lawyers@dehs.com'), ('isInherited', 'Y')]))])), ('educations', OrderedDict([('education', [OrderedDict([('type', 'LE'), ('schoolName', 'Nicholaus Copernicus'), ('graduationDate', '1952')]), OrderedDict([('type', 'LW'), ('schoolName', 'Happy LAw School'), ('graduationDate', '1991')]), OrderedDict([('type', 'LQ'), ('schoolName', 'Law School Number 1'), ('graduationDate', '1911')])])])), ('statusType', 'A')])
index: profileUuid
Determine the object type
Object type: <class 'str'>
Data value: Iaac53e00bd9a11de9b8c850332338889
index: phones
